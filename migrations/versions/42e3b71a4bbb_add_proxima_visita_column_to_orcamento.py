"""Add proxima_visita column to orcamento

Revision ID: 42e3b71a4bbb
Revises: 63f6c8aa2461
Create Date: 2025-06-03 13:03:07.677544

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '42e3b71a4bbb'
down_revision = '63f6c8aa2461'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('manutencao')
    op.drop_table('cliente')
    with op.batch_alter_table('orcamento', schema=None) as batch_op:
        batch_op.add_column(sa.Column('proxima_visita', sa.DateTime(), nullable=True))
        batch_op.drop_constraint('orcamento_cliente_id_fkey', type_='foreignkey')
        batch_op.drop_column('cliente_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('orcamento', schema=None) as batch_op:
        batch_op.add_column(sa.Column('cliente_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('orcamento_cliente_id_fkey', 'cliente', ['cliente_id'], ['id'])
        batch_op.drop_column('proxima_visita')

    op.create_table('cliente',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('cliente_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('telefone', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('endereco', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('status_manutencao', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('proxima_manutencao', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('ultima_manutencao', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('ultimo_valor', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='cliente_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('manutencao',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('cliente_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('data_agendada', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('data_realizada', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('observacao', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cliente_id'], ['cliente.id'], name='manutencao_cliente_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='manutencao_pkey')
    )
    # ### end Alembic commands ###
