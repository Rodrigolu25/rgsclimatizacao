"""fix existing columns

Revision ID: 7f134c884d0a
Revises: 51eaebd0c87f
Create Date: 2025-06-02 15:40:01.112836

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7f134c884d0a'
down_revision = '51eaebd0c87f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('manutencao')
    op.drop_table('agendamento_manutencao')
    with op.batch_alter_table('cliente', schema=None) as batch_op:
        batch_op.alter_column('nome',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
        batch_op.drop_column('data_criacao')
        batch_op.drop_column('endereco')
        batch_op.drop_column('ultimo_servico_data')
        batch_op.drop_column('email')
        batch_op.drop_column('ultimo_servico_tipo')
        batch_op.drop_column('status_manutencao')
        batch_op.drop_column('proxima_manutencao')
        batch_op.drop_column('created_at')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('cliente', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('proxima_manutencao', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('status_manutencao', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('ultimo_servico_tipo', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('ultimo_servico_data', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('endereco', sa.VARCHAR(length=200), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('data_criacao', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.alter_column('nome',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)

    op.create_table('agendamento_manutencao',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('cliente_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('data_agendamento', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('observacoes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('data_criacao', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cliente_id'], ['cliente.id'], name='agendamento_manutencao_cliente_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='agendamento_manutencao_pkey')
    )
    op.create_table('manutencao',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('cliente_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('data_agendada', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('data_realizada', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('observacao', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cliente_id'], ['cliente.id'], name='manutencao_cliente_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='manutencao_pkey')
    )
    # ### end Alembic commands ###
